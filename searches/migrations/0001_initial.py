# Generated by Django 4.0.6 on 2022-07-29 14:06

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("properties", "0007_alter_propertyplace_options_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Search",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("max_price_sale", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "max_price_rent_per_week",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "max_price_rent_per_month",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="searches",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TravelTimeRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "place_kind",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("bus_station", "Bus station"),
                            ("gym", "Gym"),
                            ("light_rail_station", "Light rail station"),
                            ("park", "Park"),
                            ("restaurant", "Restaurant"),
                            ("school", "School"),
                            ("subway_station", "Subway station"),
                            ("train_station", "Train station"),
                        ],
                        max_length=32,
                    ),
                ),
                (
                    "mode",
                    models.CharField(
                        choices=[
                            ("driving", "Driving"),
                            ("cycling", "Cycling"),
                            ("walking", "Walking"),
                            ("transit", "Public transport"),
                        ],
                        max_length=8,
                    ),
                ),
                ("max_distance", models.PositiveBigIntegerField(blank=True, null=True)),
                ("max_duration", models.PositiveBigIntegerField(blank=True, null=True)),
                (
                    "place",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="properties.place",
                    ),
                ),
                (
                    "search",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="travel_time_requirements",
                        to="searches.search",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="traveltimerequirement",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(("place__isnull", False), ("place_kind__isnull", True)),
                    models.Q(("place__isnull", True), ("place_kind__isnull", False)),
                    _connector="OR",
                ),
                name="valid_place_or_place_kind",
            ),
        ),
    ]
